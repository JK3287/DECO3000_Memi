- MEMI: Documentation -

IN THE END PUT KEYS SOMEWHERE UNDETECTABLE!!

For our app Memi, we used a plethora of coding and AI resources in order to help the finished product function.
Firstly, in order to help build a simple chatbot, we used ChatGPT 3.5 for the back-end development.
For front-end development we used Streamlit, as it is an effective tool in regard to building websites under a short amount of time.
In order to make the app more accessible, we allowed the chatbot to have an audio feature to speak through the gTTS plugin.
To specify keywords, we used NLP using the Spacy plugin.
To summarise conversations, we used LangChain.

References: 

CANVA REPORT: 

For personality and emotion detection database: https://github.com/npuliyang/Personality-Detection-MTL/blob/main/GraphMTL.py
For keyword extraction: https://www.analyticsvidhya.com/blog/2022/01/text-analysis-app-using-spacy-streamlit-and-hugging-face-spaces/
For CSS: https://discuss.streamlit.io/t/amend-streamlits-default-colourway-like-on-the-spacy-streamlit-app/4184/6
For Chatbot: https://pythonwarriors.com/build-chatbot-using-gpt-4-and-streamlit-in-python/
For NLP: https://blog.jcharistech.com/2020/07/09/simple-nlp-app-with-spacy-streamlit/
For Summary: https://blog.streamlit.io/langchain-tutorial-3-build-a-text-summarization-app/
For gTTS: https://www.youtube.com/watch?v=3FntpyGiYao&t=794s&ab_channel=ClarkMcquiston

CHATGPT (NLP)

